
Si implementi un applicazione da terminale MVC per l'esecuzione di operazioni matematiche.
Che permetta 3 input da utente: operatore1, operatore2 e operazione da effettuare
Definire un interfaccia "Operazione" da implementare attraverso le classi delle operazioni effettuabili (somma, sottrazione, divisione, moltiplicazione)
Utilizzare una superclasse per unificare costruttore, struttura attributi
Il main del programma sarà presente in una classe "CalcolatriceView"

Predisporre all'interno della view il metodo di controllo per
Verificare gli input da tastiera per quanto riguarda i numeri (sia positivi che negativi)
Verificare gli input da tastiera per confermare che l'operazione sia gestita (gestiamo somma, sottrazione, divisione, moltiplicazione)
In caso di errore sollevare eccezioni specifiche CalcolatriceException contenente un messaggio di errore.

SOLO DOPO AVER COMPLETATO QUANTO VISTO SOPRA (EXTRA)
- Incasellare l'esecuzione in un loop (che esce quando operazione == stringa vuota)
- Tenere traccia mediante una List<String> delle operazioni effettuate, dei loro operatori e dei risultati
- Mostrare lo storico delle operazione a fine programma dopo aver rilevato operazione == stringa vuota


HINTS
Classe Somma extends Operazione Implements Calcolo
Classe Sottrazione extends Operazione Implements Calcolo
Classe Divisione extends Operazione Implements Calcolo
Classe Moltiplicazione extends Operazione Implements Calcolo
Nella superclasse (extends) bisogna mettere ciò che sarebbe in comune tra tutte le operazioni (sia attributi che metodi)
Nell'interfaccia (implements) bisogna definire la firma del metodo di calcolo che ogni operazione implementerà nella sua classe specifica
La View(main) serve solo per leggere gli input da tastiera e per scrivere gli ouput
Il controller istanzia le operazioni, tiene la storia, scatenza i calcoli e passa i risultati alla view